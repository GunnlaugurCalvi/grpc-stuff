syntax = "proto3";

package calculator;
option go_package = "calcpb";

message SumNumbers {
    int64 num_1 = 1;
    int64 num_2 = 2;
}

message SumRequest {
    SumNumbers sumResult = 1;
}

message SumResponse {
    int64 result = 1;
}

message PrimeRequest {
    int64 num = 1;
}

message PrimeResponse {
    int64 result = 1;
}

message ComputeAvgRequest {
    int64 number = 1;
}

message ComputeAvgResponse {
    double avgResult = 1;
}

message FindMaximumRequest {
    int64 number = 1;
}

message FindMaximumResponse {
    int64 max = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalcService {
    // Unary
    rpc Sum(SumRequest) returns (SumResponse) {};

    // Server Streaming
    rpc PrimeDecomposition(PrimeRequest) returns (stream PrimeResponse) {};

    // Client Streaming
    rpc ComputeAverage(stream ComputeAvgRequest) returns (ComputeAvgResponse) {};

    // Bi-Directional Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // Unary ; error handling this RPC will throw an exception if the sent number is negative
    // The error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}