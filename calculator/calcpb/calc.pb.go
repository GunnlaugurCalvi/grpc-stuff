// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calcpb/calc.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumNumbers struct {
	Num_1                int64    `protobuf:"varint,1,opt,name=num_1,json=num1,proto3" json:"num_1,omitempty"`
	Num_2                int64    `protobuf:"varint,2,opt,name=num_2,json=num2,proto3" json:"num_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumNumbers) Reset()         { *m = SumNumbers{} }
func (m *SumNumbers) String() string { return proto.CompactTextString(m) }
func (*SumNumbers) ProtoMessage()    {}
func (*SumNumbers) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{0}
}

func (m *SumNumbers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumNumbers.Unmarshal(m, b)
}
func (m *SumNumbers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumNumbers.Marshal(b, m, deterministic)
}
func (m *SumNumbers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumNumbers.Merge(m, src)
}
func (m *SumNumbers) XXX_Size() int {
	return xxx_messageInfo_SumNumbers.Size(m)
}
func (m *SumNumbers) XXX_DiscardUnknown() {
	xxx_messageInfo_SumNumbers.DiscardUnknown(m)
}

var xxx_messageInfo_SumNumbers proto.InternalMessageInfo

func (m *SumNumbers) GetNum_1() int64 {
	if m != nil {
		return m.Num_1
	}
	return 0
}

func (m *SumNumbers) GetNum_2() int64 {
	if m != nil {
		return m.Num_2
	}
	return 0
}

type SumRequest struct {
	SumResult            *SumNumbers `protobuf:"bytes,1,opt,name=sumResult,proto3" json:"sumResult,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{1}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetSumResult() *SumNumbers {
	if m != nil {
		return m.SumResult
	}
	return nil
}

type SumResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{2}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeRequest struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeRequest) Reset()         { *m = PrimeRequest{} }
func (m *PrimeRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeRequest) ProtoMessage()    {}
func (*PrimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{3}
}

func (m *PrimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeRequest.Unmarshal(m, b)
}
func (m *PrimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeRequest.Marshal(b, m, deterministic)
}
func (m *PrimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeRequest.Merge(m, src)
}
func (m *PrimeRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeRequest.Size(m)
}
func (m *PrimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeRequest proto.InternalMessageInfo

func (m *PrimeRequest) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type PrimeResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeResponse) Reset()         { *m = PrimeResponse{} }
func (m *PrimeResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeResponse) ProtoMessage()    {}
func (*PrimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{4}
}

func (m *PrimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeResponse.Unmarshal(m, b)
}
func (m *PrimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeResponse.Marshal(b, m, deterministic)
}
func (m *PrimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeResponse.Merge(m, src)
}
func (m *PrimeResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeResponse.Size(m)
}
func (m *PrimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeResponse proto.InternalMessageInfo

func (m *PrimeResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumNumbers)(nil), "calculator.SumNumbers")
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*PrimeRequest)(nil), "calculator.PrimeRequest")
	proto.RegisterType((*PrimeResponse)(nil), "calculator.PrimeResponse")
}

func init() {
	proto.RegisterFile("calculator/calcpb/calc.proto", fileDescriptor_cfc74e58bc0fa04b)
}

var fileDescriptor_cfc74e58bc0fa04b = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xcd, 0x4a, 0xc4, 0x30,
	0x10, 0xb6, 0x56, 0x8b, 0x4e, 0x15, 0x64, 0x84, 0xb5, 0x2e, 0x1e, 0x96, 0x80, 0xe8, 0xa9, 0xba,
	0x55, 0xc4, 0xf3, 0xea, 0x55, 0x91, 0xf6, 0xe6, 0x45, 0xda, 0x90, 0x43, 0xa1, 0x49, 0x6a, 0x92,
	0xf1, 0x51, 0x7c, 0x5e, 0x69, 0xb6, 0x35, 0x8b, 0x8a, 0xa7, 0x99, 0xf9, 0xe6, 0xfb, 0x19, 0x18,
	0x38, 0xe3, 0x75, 0xc7, 0xa9, 0xab, 0x9d, 0x36, 0x57, 0x43, 0xdb, 0x37, 0xbe, 0xe4, 0xbd, 0xd1,
	0x4e, 0x23, 0x84, 0x2d, 0xbb, 0x03, 0xa8, 0x48, 0x3e, 0x93, 0x6c, 0x84, 0xb1, 0x78, 0x0c, 0xbb,
	0x8a, 0xe4, 0xdb, 0x32, 0x8b, 0x16, 0xd1, 0x65, 0x5c, 0xee, 0x28, 0x92, 0xcb, 0x09, 0x2c, 0xb2,
	0xed, 0x6f, 0xb0, 0x60, 0x2b, 0xaf, 0x2b, 0xc5, 0x3b, 0x09, 0xeb, 0xf0, 0x16, 0xf6, 0xed, 0x30,
	0x59, 0xea, 0x9c, 0xd7, 0xa6, 0xc5, 0x2c, 0x0f, 0x29, 0x79, 0x88, 0x28, 0x03, 0x91, 0x9d, 0x43,
	0xea, 0x3d, 0x6c, 0xaf, 0x95, 0x15, 0x38, 0x83, 0xc4, 0x04, 0x87, 0xb8, 0x1c, 0x27, 0xb6, 0x80,
	0x83, 0x17, 0xd3, 0x4a, 0x31, 0x85, 0x1d, 0x41, 0xac, 0x48, 0x8e, 0xa4, 0xa1, 0x65, 0x17, 0x70,
	0x38, 0x32, 0xfe, 0xb7, 0x2a, 0x3e, 0x23, 0x48, 0x1f, 0xea, 0x8e, 0x57, 0xc2, 0x7c, 0xb4, 0x5c,
	0xe0, 0x3d, 0xc4, 0x15, 0x49, 0xfc, 0x79, 0xeb, 0x98, 0x34, 0x3f, 0xf9, 0x85, 0xaf, 0xfd, 0xd9,
	0x16, 0x3e, 0x01, 0xfa, 0xc8, 0x47, 0xc1, 0xb5, 0xec, 0xb5, 0x6d, 0x5d, 0xab, 0x15, 0x66, 0x9b,
	0x82, 0xcd, 0xa3, 0xe7, 0xa7, 0x7f, 0x6c, 0x26, 0xb3, 0xeb, 0x68, 0xb5, 0xf7, 0x9a, 0xac, 0xff,
	0xd4, 0x24, 0xfe, 0x47, 0x37, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x73, 0x1d, 0x2a, 0xc3,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalcServiceClient is the client API for CalcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcServiceClient interface {
	// Unary
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// Server Streaming
	PrimeDecomposition(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (CalcService_PrimeDecompositionClient, error)
}

type calcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalcServiceClient(cc grpc.ClientConnInterface) CalcServiceClient {
	return &calcServiceClient{cc}
}

func (c *calcServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalcService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calcServiceClient) PrimeDecomposition(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (CalcService_PrimeDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcService_serviceDesc.Streams[0], "/calculator.CalcService/PrimeDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcServicePrimeDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalcService_PrimeDecompositionClient interface {
	Recv() (*PrimeResponse, error)
	grpc.ClientStream
}

type calcServicePrimeDecompositionClient struct {
	grpc.ClientStream
}

func (x *calcServicePrimeDecompositionClient) Recv() (*PrimeResponse, error) {
	m := new(PrimeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalcServiceServer is the server API for CalcService service.
type CalcServiceServer interface {
	// Unary
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	// Server Streaming
	PrimeDecomposition(*PrimeRequest, CalcService_PrimeDecompositionServer) error
}

// UnimplementedCalcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalcServiceServer struct {
}

func (*UnimplementedCalcServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalcServiceServer) PrimeDecomposition(req *PrimeRequest, srv CalcService_PrimeDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeDecomposition not implemented")
}

func RegisterCalcServiceServer(s *grpc.Server, srv CalcServiceServer) {
	s.RegisterService(&_CalcService_serviceDesc, srv)
}

func _CalcService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalcService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalcService_PrimeDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalcServiceServer).PrimeDecomposition(m, &calcServicePrimeDecompositionServer{stream})
}

type CalcService_PrimeDecompositionServer interface {
	Send(*PrimeResponse) error
	grpc.ServerStream
}

type calcServicePrimeDecompositionServer struct {
	grpc.ServerStream
}

func (x *calcServicePrimeDecompositionServer) Send(m *PrimeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CalcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalcService",
	HandlerType: (*CalcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalcService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeDecomposition",
			Handler:       _CalcService_PrimeDecomposition_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calcpb/calc.proto",
}
